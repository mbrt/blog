<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cloud on mbrt blog</title>
    <link>https://blog.mbrt.dev/tags/cloud/</link>
    <description>Recent content in Cloud on mbrt blog</description>
    <generator>Hugo -- 0.138.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mbrt.dev/tags/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Glassdb: transactional object storage</title>
      <link>https://blog.mbrt.dev/posts/transactional-object-storage/</link>
      <pubDate>Sat, 16 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.mbrt.dev/posts/transactional-object-storage/</guid>
      <description>&lt;p&gt;I was frustrated by the gap between stateless and stateful applications in the
cloud. While I could easily spin up a stateless application as a &amp;ldquo;serverless&amp;rdquo;
function in any major cloud provider and pretty much forget about it, persisting
data between requests was a game of pick two among three: cheap, strongly
consistent, portable.&lt;/p&gt;
&lt;p&gt;Could I solve portability and lack of transactions myself with &lt;em&gt;a single
client-side solution?&lt;/em&gt; I thought it would be possible through object storage
(e.g. &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;AWS S3&lt;/a&gt;), which is strongly consistent,
ubiquitous and cheap.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
