<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cloud on mbrt blog</title>
    <link>https://blog.mbrt.dev/tags/cloud/</link>
    <description>Recent content in Cloud on mbrt blog</description>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 31 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mbrt.dev/tags/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Domain resurrect</title>
      <link>https://blog.mbrt.dev/posts/domain-resurrect/</link>
      <pubDate>Fri, 31 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.mbrt.dev/posts/domain-resurrect/</guid>
      <description>&lt;p&gt;I processed a large fraction of the Internet on a single machine, trying to find
some valuable but forgotten domain names to buy (probably 25 years too late).
Here&amp;rsquo;s the story of what I found and how I did it, and &lt;strong&gt;not&lt;/strong&gt; the story of
&lt;strong&gt;why&lt;/strong&gt; I decided to try, because I don&amp;rsquo;t know myself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spoiler alert&lt;/strong&gt;: If you just want to know whether there is indeed something,
and you should scramble to scoop it up to become a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_name_speculation&#34;&gt;domain-flipper&lt;/a&gt;
billionaire, hold your horses: I believe there isn&amp;rsquo;t much. The following
sections are more focused on the engineering side, so if you only care about the
conclusion, skip to &lt;a href=&#34;https://blog.mbrt.dev/posts/domain-resurrect/#results&#34;&gt;Results&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Glassdb: transactional object storage</title>
      <link>https://blog.mbrt.dev/posts/transactional-object-storage/</link>
      <pubDate>Sat, 16 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.mbrt.dev/posts/transactional-object-storage/</guid>
      <description>&lt;p&gt;I was frustrated by the gap between stateless and stateful applications in the
cloud. While I could easily spin up a stateless application as a &amp;ldquo;serverless&amp;rdquo;
function in any major cloud provider and pretty much forget about it, persisting
data between requests was a game of pick two among three: cheap, strongly
consistent, portable.&lt;/p&gt;
&lt;p&gt;Could I solve portability and lack of transactions myself with &lt;em&gt;a single
client-side solution?&lt;/em&gt; I thought it would be possible through object storage
(e.g. &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;AWS S3&lt;/a&gt;), which is strongly consistent,
ubiquitous and cheap.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
